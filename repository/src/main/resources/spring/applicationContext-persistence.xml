<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="
      http://www.springframework.org/schema/jdbc
      http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--<jdbc:embedded-database id="dataSource" type="H2">-->
        <!--<jdbc:script location="classpath:db/sql/schema.sql"/>-->
        <!--<jdbc:script location="classpath:db/sql/test-data.sql"/>-->
    <!--</jdbc:embedded-database>-->

    <!--<bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--<property name="jpaVendorAdapter">-->
            <!--<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />-->
        <!--</property>-->
        <!--<property name="packagesToScan"-->
                  <!--value="com.epam.idea.repository"/>-->
        <!--<property name="jpaProperties">-->
            <!--<props>-->

                <!--&lt;!&ndash;Configures the used database dialect. This allows Hibernate to create SQL&ndash;&gt;-->
                <!--&lt;!&ndash;that is optimized for the used database.&ndash;&gt;-->
                <!--<prop key="hibernate.dialect">${hibernate.dialect}</prop>-->

                <!--&lt;!&ndash;Specifies the action that is invoked to the database when the Hibernate&ndash;&gt;-->
                <!--&lt;!&ndash;SessionFactory is created or closed.&ndash;&gt;-->
                <!--<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->

                <!--<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>-->
                <!--<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>-->
                <!--<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>-->

                <!--&lt;!&ndash;If the value of this property is true, Hibernate writes all SQL&ndash;&gt;-->
                <!--&lt;!&ndash;statements to the console.&ndash;&gt;-->
                <!--<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>-->

                <!--&lt;!&ndash;If the value of this property is true, Hibernate will format the SQL&ndash;&gt;-->
                <!--&lt;!&ndash;that is written to the console.&ndash;&gt;-->
                <!--<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:db/datasource.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--FOR PRODUCTION-->
    <!-- HikariCP configuration -->
    <!--<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">-->
    <!--<constructor-arg ref="hikariConfig" />-->
    <!--</bean>-->

    <!--<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">-->
    <!--<property name="poolName" value="springHikariCP" />-->
    <!--<property name="dataSourceClassName" value="${db.dataSourceClassName}" />-->
    <!--&lt;!&ndash;<property name="jdbcUrl" value="${db.url}" />&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="driverClassName" value="${db.driver}" />&ndash;&gt;-->
    <!--<property name="username" value="${db.username}" />-->
    <!--<property name="password" value="${db.password}" />-->
    <!--</bean>-->
</beans>